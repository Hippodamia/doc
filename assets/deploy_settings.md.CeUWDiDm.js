import{_ as i,c as s,o as a,a4 as e}from"./chunks/framework.DpGEzsCt.js";const E=JSON.parse('{"title":"Settings","description":"","frontmatter":{"outline":[2,4]},"headers":[],"relativePath":"deploy/settings.md","filePath":"deploy/settings.md"}'),t={name:"deploy/settings.md"},o=e('<h1 id="settings" tabindex="-1">Settings <a class="header-anchor" href="#settings" aria-label="Permalink to &quot;Settings&quot;">​</a></h1><p>hippodammia-server 使用各种配置文件来运行</p><blockquote><ul><li>多个配置文件可以使用 settings.xxx.json 来区分</li><li>在启动时，可以通过命令尾部附带 xxx 参数来指定配置文件</li><li>例如：<code>bun run ./bundle.js ws</code> (单js文件模式)</li><li>例如：<code>./hippodamia-server.exe ws</code> (win:powershell 下)</li><li>例如：<code>./hippodamia-server ws</code> (linux:bash 下)</li></ul></blockquote><h2 id="启动时选择" tabindex="-1">启动时选择 <a class="header-anchor" href="#启动时选择" aria-label="Permalink to &quot;启动时选择&quot;">​</a></h2><p>得益于多个node的CLI工具库, hippodamia-server 可以通过在终端中可视化的列表来选择配置文件</p><h2 id="配置项参考" tabindex="-1">配置项参考 <a class="header-anchor" href="#配置项参考" aria-label="Permalink to &quot;配置项参考&quot;">​</a></h2><h3 id="mode-服务模式" tabindex="-1"><code>mode</code> 服务模式 <a class="header-anchor" href="#mode-服务模式" aria-label="Permalink to &quot;`mode` 服务模式&quot;">​</a></h3><p>模式决定了 hippodamia-server 的对接模式，目前仅支持一下两种</p><ul><li><code>onebot</code></li><li><code>test</code></li></ul><h4 id="onebot-模式" tabindex="-1"><code>onebot</code> 模式 <a class="header-anchor" href="#onebot-模式" aria-label="Permalink to &quot;`onebot` 模式&quot;">​</a></h4><p>使用 onebot 模式可以对接任何提供 onebot 服务的协议端 例如:</p><ul><li>napcat</li><li>llonebot</li><li>go-cqhttp</li></ul><p>同时你需要提供以下参数</p><p><code>mode</code> 为 <code>http</code>,<code>ws</code>,<code>ws-reverse</code></p><ul><li><p><code>http</code> 方式</p><ul><li><code>port</code> 端口号,这是用于开启 HTTP POST 的监听服务,在 onebot 上报初需要填写<code>http://127.0.0.1:端口号/onebot</code></li><li><code>api</code> 这是 onebot 协议端的 API 地址,用于发送 api 请求 当使用</li><li><code>secret</code> 密钥</li></ul><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;onebot&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;mode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;port&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11451</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;api&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://127.0.0.1:3000/&quot;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span></code></pre></div></li><li><p><code>ws</code> 模式</p><ul><li><code>url</code> 连接正向 ws 的地址</li><li><code>secret</code> 密钥</li></ul><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;onebot&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;bot&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1919810&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;mode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ws&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;url&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ws://127.0.0.1:3389&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span></code></pre></div></li><li><p><code>ws-reverse</code> 方式</p></li></ul><h4 id="kook-模式" tabindex="-1"><code>kook</code> 模式 <a class="header-anchor" href="#kook-模式" aria-label="Permalink to &quot;`kook` 模式&quot;">​</a></h4><h4 id="test-模式" tabindex="-1"><code>test</code> 模式 <a class="header-anchor" href="#test-模式" aria-label="Permalink to &quot;`test` 模式&quot;">​</a></h4><h3 id="logging-日志" tabindex="-1"><code>logging</code> 日志 <a class="header-anchor" href="#logging-日志" aria-label="Permalink to &quot;`logging` 日志&quot;">​</a></h3><p>日志决定了 hippodamia-server 的日志输出模式</p><h4 id="level-日志级别" tabindex="-1"><code>level</code> 日志级别 <a class="header-anchor" href="#level-日志级别" aria-label="Permalink to &quot;`level` 日志级别&quot;">​</a></h4><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;level&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;debug&quot;</span></span></code></pre></div><ul><li><code>debug</code> 调试模式</li><li><code>info</code> 信息模式</li><li><code>warn</code> 警告模式</li><li><code>error</code> 错误模式</li><li><code>fatal</code> 严重错误模式</li></ul><h3 id="api" tabindex="-1"><code>api</code> <a class="header-anchor" href="#api" aria-label="Permalink to &quot;`api`&quot;">​</a></h3><p>api 配置项决定了 hippodamia-server 启动的 API 接口</p><blockquote><p>也就是后期用于后台操作赛马 API 的接口</p></blockquote><h4 id="port-端口号" tabindex="-1"><code>port</code> 端口号 <a class="header-anchor" href="#port-端口号" aria-label="Permalink to &quot;`port` 端口号&quot;">​</a></h4><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><h3 id="使用onebot正向ws连接" tabindex="-1">使用onebot正向ws连接 <a class="header-anchor" href="#使用onebot正向ws连接" aria-label="Permalink to &quot;使用onebot正向ws连接&quot;">​</a></h3>',28),l=[o];function n(h,d,p,r,c,k){return a(),s("div",null,l)}const g=i(t,[["render",n]]);export{E as __pageData,g as default};
